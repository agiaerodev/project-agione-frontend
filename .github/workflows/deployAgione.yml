name: Deploy agione

on: workflow_dispatch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GLOBAL_ACCESS_TOKEN }}
          fetch-depth: '0'

      - name: Set up Git credentials
        run: |
          git config --global credential.helper store
          git config --global user.password ${{ secrets.GLOBAL_ACCESS_TOKEN }}
          git config --global url.https://${{ secrets.GLOBAL_ACCESS_TOKEN }}@github.com/.insteadOf https://github.com/
        shell: bash
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"
      - name: Debug environment setup
        run: |
          echo "Current branch: ${{ github.ref }}"
          echo "Setting up environment file..."

          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            echo "Using production environment"
            cp src/environments/environment.prod.ts src/environments/environment.ts
          elif [[ "${{ github.ref }}" == "refs/heads/stg" ]]; then
            echo "Using staging environment"
            cp src/environments/environment.stg.ts src/environments/environment.ts
          elif [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "Using development environment"
            cp src/environments/environment.dev.ts src/environments/environment.ts
          elif [[ "${{ github.ref }}" == "refs/heads/QA" ]]; then
            echo "Using QA environment"
            cp src/environments/environment.qa.ts src/environments/environment.ts
          elif [[ "${{ github.ref }}" == "refs/heads/localhost" ]]; then
            echo "Using localhost environment"
            cp src/environments/environment.localhost.ts src/environments/environment.ts
          fi
      - name: Install Quasar CLI
        run: |
          npm cache clean --force
          npm install -g @quasar/cli

      - name: Install dependencies
        run: |
          npm install
      - name: Initialize and update submodules
        run: |
          branch="staging"
          [ "${{ github.ref }}" == "refs/heads/master" ] && branch="master"
          git submodule update --init --remote
          git submodule foreach --recursive git fetch
          git submodule foreach --recursive git checkout $branch
      - name: Build Agione
        run: quasar build -m pwa
      - name: deploy angione azure
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{
            github.ref == 'refs/heads/master' && secrets.AZURE_DEPLOY_TOKEN_MAIN ||
            github.ref == 'refs/heads/stg' && secrets.AZURE_DEPLOY_TOKEN_STAGING ||
            github.ref == 'refs/heads/dev' && secrets.AZURE_DEPLOY_TOKEN_DEV ||
            github.ref == 'refs/heads/QA' && secrets.AZURE_DEPLOY_TOKEN_QA ||
            github.ref == 'refs/heads/localhost' && secrets.AZURE_DEPLOY_TOKEN_LOCAL}}
          action: "upload"
          app_location: "dist/pwa" # App source code path
          api_location: "" # Api source code path - optional
          output_location: "dist" # Built app content directory - optional
      - name: âœ… Notificar a Discord
        run: |
          BRANCH_NAME=$(echo "${{ github.ref }}" | sed 's|refs/heads/||')
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{
                 "content": "âœ… **Construction successfully completed!**\nðŸ“‚ **Rama:** '"$BRANCH_NAME"'"
               }' \
               "https://discord.com/api/webhooks/1343946078772264981/A9JA0M_Y8oPebpba42XBoy7vuaLf4Ks4HU20b9tDmUyPtYlRjb1Zf2vGr80STeXfKKLX"
